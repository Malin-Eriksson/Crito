@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ArticleItemPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.PublishedContent;

@{
	Layout = "_Layout.cshtml";
	
	
    var image = Model.Value<IPublishedContent>("articleImage");
    
    
    var itemsPerPage = 3;
    var pageNumber = 1;

    if (!int.TryParse(Context.Request.Query["page"], out pageNumber))
    {
        pageNumber = 1;
    }

    var selection = Umbraco?.Content(Guid.Parse("06b19add-fce1-4a61-a63b-cf7bb3e2b67b"))
    .ChildrenOfType("articleItemPage")?
    .Where(x => x.IsVisible())
    .OrderByDescending(x => x.CreateDate).ToList();


    var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((pageNumber - 1) * itemsPerPage).Take(itemsPerPage);
}


@await Html.PartialAsync("_BreadcrumbSection")



<div class="main container">
    <div class="main-article">
        <h2>@Model.Name</h2>
        <div class="article-info">
            <span>@Model.CreateDate.ToString("MMM dd, yyyy")</span>
            <span><i class="fa-solid fa-circle"></i></span>
            <span>@Model.Value("articleCategory")</span>
            <span><i class="fa-solid fa-circle"></i></span>
            <span>@Model.Value("articleAuthor")</span>
        </div>
        <img src="@image.Url()" />
        <div>
            <p>@Model.Value("articleContent")</p>
		</div>   
        <div class="tags">
			@if (Model.HasValue("articletags"))
			{
				@foreach (var tag in @Model.Value<IEnumerable<string>>("articleTags"))
				{
					<span>@tag</span>
				}
			}
		</div>
    </div>
 
<!--SEARCH-->
    <div>
        <div class="search">
            <i class="fa-regular fa-magnifying-glass"></i>
            <input type="text" placeholder="Type to search...">
        </div>
        
<!--RECENT ARTICLES-->
        <div class="recent">
            <h3>Recent Posts</h3>
            @if (pagedItems != null)
            {
                foreach (var item in pagedItems)
                {
                    var url = item.Url();
                    var date = item.CreateDate;
                    var title = item.Name();

                    <a href="@url" class="article">
                        <h4>@title</h4>
                        <div class="date">
                            <p>@date.ToString("dd MMM, yyy")</p>
                        </div>
                    </a>
                    <hr>
                }
            }
        </div>
        
        <!--CATEGORIES-->
        <div class="categories">
            <h3>Categories</h3>
            <a href="#" class="category">
                <h4>Technology - </h4>
                <span>20 Posts</span>
            </a>
            <a class="category">
                <h4>Freelancing - </h4>
                <span>7 Posts</span>
            </a>
            <a href="#" class="category">
                <h4>Writing - </h4>
                <span>16 Posts</span>
            </a>
            <a href="#" class="category">
                <h4>Technology - </h4>
                <span>20 Posts</span>
            </a>
            <a href="#" class="category">
                <h4>Marketing - </h4>
                <span>11 Posts</span>
            </a>
            <a href="#" class="category">
                <h4>Business - </h4>
                <span>35 Posts</span>
            </a>
            <a href="#" class="category">
                <h4>Education - </h4>
                <span>14 Posts</span>
            </a>
        </div>
    </div>
</div>

@await Html.PartialAsync("_ArticleDisplay")