@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.HomePage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.PublishedContent;

@{

	
	var itemsPerPage = 9;
    var pageNumber = 1;
    
    if (!int.TryParse(Context.Request.Query["page"], out pageNumber))
    {
        pageNumber = 1;
    }
    
	var selection = Umbraco.Content(Guid.Parse("4d7ff7ab-78ee-4949-9005-8a364707ac96"))
    .ChildrenOfType("teamMemberPresentation")
    .Where(x => x.IsVisible());
	
	var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((pageNumber - 1) * itemsPerPage).Take(itemsPerPage);
}

@await Html.PartialAsync("_BreadcrumbSection")



<div class="team">
    <div class="container">
        <p class="orange">Meet Our Team</p>
        <div class="header">
            <h2>Experience Team Members</h2>
            <a href="@Model.Value("teamMembersButtonLink")"><button class="dark-theme-btn">@Model.Value("teamMembersButtonText")&nbsp;<i class="fa-light fa-arrow-up-right"></i></button></a>
        </div>
        <div class="team-members">
            @if (pagedItems != null) 
                {
                    foreach (var item in pagedItems)
                {
                
                var url = item.Url();
                var image = item.Value<IPublishedContent>("teamMemberImage");
                var name = item.Name();
                var role = item.Value("teamMemberRole");
                
                <a href="@url">
                    <img src="@image?.Url()"/> 
                    <h3>@name</h3>
                    <p>@role</p>
                </a>
                }
            }
        </div>
        <nav class="item-pagination" aria-label="Page Navigation">
            @if (pageNumber > 1) 
            {
                <a href="?page=@(pageNumber - 1)" class="item-link link-prev" aria-label="Previous">
                <span aria-hidden="true"><i class="fa-sharp fa-solid fa-chevron-left"></i></span>
                </a>
            }
            
            @for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
            {
                if (i == pageNumber)
                {
                    <a href="#" class="item-link active"><i class="fa-solid fa-circle"></i></a>
                } 
                else
                {
                    <a href="#" class="item-link"><i class="fa-solid fa-circle"></i></a>
                }
            }
            
            @if (pageNumber < Math.Ceiling((decimal)totalItems / itemsPerPage))
            {
                <a href="?page=@(pageNumber + 1)" class="item-link link-next" aria-label="Next">
                    <span aria-hidden="true"><i class="fa-sharp fa-solid fa-chevron-right"></i></span>
                </a>
            }
        </nav>
    </div>
    
    
<!--CLIENT REVIEWS-->    
    <div class="testimonial container">
    <p class="orange">@Model.Value("testimonialTitle")</p>
    <h2>@Model.Value("testimonialHeading")</h2>
    <div class="reviews">
        @Html.GetBlockListHtml(Model.Testimonial) 
    </div>
    <a href="@Model.Value("testimonialButtonLink")"><button class="black-btn">@Model.Value("testimonialButtonText")<i class="fa-light fa-arrow-up-right"></i></button></a>
</div>
    
</div>



