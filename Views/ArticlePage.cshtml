@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ArticlePage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.PublishedContent;
@{
    Layout = "_Layout.cshtml";

    var itemsPerPage = 9;
    var pageNumber = 1;
    
    if (!int.TryParse(Context.Request.Query["page"], out pageNumber))
    {
        pageNumber = 1;
    }

	var selection = Umbraco?.Content(Guid.Parse("06b19add-fce1-4a61-a63b-cf7bb3e2b67b"))
    .ChildrenOfType("articleItemPage")?
    .Where(x => x.IsVisible())
    .OrderByDescending(x => x.CreateDate).ToList();
    

    var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((pageNumber - 1) * itemsPerPage).Take(itemsPerPage);
   
    
}

@await Html.PartialAsync("_BreadcrumbSection")


<div class="news">
    <div class="container">

        <div class="header">
            <h2>@Model.Value("articlePageHeading")</h2>
        </div>
        <div class="articles">

            @if (pagedItems != null) 
            {
                foreach (var item in pagedItems)
            	{
            	    var url = item.Url();
            	    var date = item.CreateDate;
            	    var image = item.Value<IPublishedContent>("articleImage");
            	    var category = item.Value("articleCategory");
            	    var title = item.Name();
            	    var preamble = item.Value("articlePreamble");
            	
                	<a href="@url" class="article">
                        <div class="date">
                            <h3>@date.ToString("dd")</h3>
                            <p>@date.ToString("MMM")</p>
                        </div>
                        <img src="@image?.Url()"/> 
                        <p>@category</p>
                        <h3>@title</h3>
                        <p>@preamble</p>
                    </a>
            	}
            }
        </div>
        <nav class="item-pagination content-center" aria-label="Page Navigation">
            @if (pageNumber > 1) 
            {
                <a href="?page=@(pageNumber - 1)" class="item-link link-prev" aria-label="Previous">
                    <span aria-hidden="true"><i class="fa-sharp fa-solid fa-chevron-left"></i></span>
                </a>
            }
            
            @for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
            {
                if (i == pageNumber)
                {
                    <a href="#" class="item-link active">@i</a>
                } else
                {
                    <a href="?page=@i" class="item-link">@i</a>
                }
            }

            
            @if (pageNumber < Math.Ceiling((decimal)totalItems / itemsPerPage))
            {
                <a href="?page=@(pageNumber + 1)" class="item-link link-next" aria-label="Next">
                    <span aria-hidden="true"><i class="fa-sharp fa-solid fa-chevron-right"></i></span>
                </a>
            }
        </nav>
        
    </div>
</div>